[{"title":"Firebase","type":0,"sectionRef":"#","url":"api/Firebase","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"Firebase","url":"api/Firebase#functions","content":" "},{"title":"init​","type":1,"pageTitle":"Firebase","url":"api/Firebase#init","content":"&lt;/&gt; Firebase.init(appParams: { ProjectId: string, APIKey: string, Email: string, Password: string }) → FirebaseApp Creates a FirebaseApp object with the given ProjectId, APIKey, Email and password. "},{"title":"FirebaseApp","type":0,"sectionRef":"#","url":"api/FirebaseApp","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"FirebaseApp","url":"api/FirebaseApp#properties","content":" "},{"title":"ProjectId​","type":1,"pageTitle":"FirebaseApp","url":"api/FirebaseApp#ProjectId","content":"&lt;/&gt; FirebaseApp.ProjectId: string Project ID of the Firebase project.  "},{"title":"APIKey​","type":1,"pageTitle":"FirebaseApp","url":"api/FirebaseApp#APIKey","content":"&lt;/&gt; FirebaseApp.APIKey: string API key of the Firebase project.  "},{"title":"Email​","type":1,"pageTitle":"FirebaseApp","url":"api/FirebaseApp#Email","content":"&lt;/&gt; FirebaseApp.Email: string Email of the Firebase user.  "},{"title":"Password​","type":1,"pageTitle":"FirebaseApp","url":"api/FirebaseApp#Password","content":"&lt;/&gt; FirebaseApp.Password: string Password of the Firebase user.  "},{"title":"Firestore​","type":1,"pageTitle":"FirebaseApp","url":"api/FirebaseApp#Firestore","content":"&lt;/&gt; FirebaseApp.Firestore: Firestore Firestore object used to access the Firestore API. "},{"title":"DocumentList","type":0,"sectionRef":"#","url":"api/DocumentList","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"DocumentList","url":"api/DocumentList#properties","content":" "},{"title":"App​","type":1,"pageTitle":"DocumentList","url":"api/DocumentList#App","content":"&lt;/&gt; DocumentList.App: FirebaseApp The FirebaseApp object tied to this list.  "},{"title":"Path​","type":1,"pageTitle":"DocumentList","url":"api/DocumentList#Path","content":"&lt;/&gt; DocumentList.Path: string The path of this list.  "},{"title":"PageSize​","type":1,"pageTitle":"DocumentList","url":"api/DocumentList#PageSize","content":"&lt;/&gt; DocumentList.PageSize: number The intial page size of this list.  "},{"title":"Docs​","type":1,"pageTitle":"DocumentList","url":"api/DocumentList#Docs","content":"&lt;/&gt; DocumentList.Docs: DocumentReference[] References to the documents in this list.  "},{"title":"NextPageToken​","type":1,"pageTitle":"DocumentList","url":"api/DocumentList#NextPageToken","content":"&lt;/&gt; DocumentList.NextPageToken: string The token to use for the next page of results. This will be nil if there are no more results. "},{"title":"Functions​","type":1,"pageTitle":"DocumentList","url":"api/DocumentList#functions","content":" "},{"title":"GetNextPage​","type":1,"pageTitle":"DocumentList","url":"api/DocumentList#GetNextPage","content":"&lt;/&gt; DocumentList:GetNextPage() → DocumentList Returns the next page of documents. Returns nothing if there are no more documents. "},{"title":"Firestore","type":0,"sectionRef":"#","url":"api/Firestore","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"Firestore","url":"api/Firestore#functions","content":" "},{"title":"GetCollection​","type":1,"pageTitle":"Firestore","url":"api/Firestore#GetCollection","content":"&lt;/&gt; Firestore:GetCollection(path: string) → CollectionReference Returns a collection reference.  "},{"title":"GetDoc​","type":1,"pageTitle":"Firestore","url":"api/Firestore#GetDoc","content":"&lt;/&gt; Firestore:GetDoc(path: string) → DocumentReference Returns a document reference. "},{"title":"CollectionReference","type":0,"sectionRef":"#","url":"api/CollectionReference","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"CollectionReference","url":"api/CollectionReference#properties","content":" "},{"title":"App​","type":1,"pageTitle":"CollectionReference","url":"api/CollectionReference#App","content":"&lt;/&gt; CollectionReference.App: FirebaseApp The FirebaseApp object tied to this collection.  "},{"title":"Path​","type":1,"pageTitle":"CollectionReference","url":"api/CollectionReference#Path","content":"&lt;/&gt; CollectionReference.Path: string The path of this collection. "},{"title":"Functions​","type":1,"pageTitle":"CollectionReference","url":"api/CollectionReference#functions","content":" "},{"title":"GetDoc​","type":1,"pageTitle":"CollectionReference","url":"api/CollectionReference#GetDoc","content":"&lt;/&gt; CollectionReference:GetDoc(path: string) → DocumentReference Returns a document reference.  "},{"title":"GetDocs​","type":1,"pageTitle":"CollectionReference","url":"api/CollectionReference#GetDocs","content":"&lt;/&gt; CollectionReference:GetDocs(pageSize: number) → Promise&lt;DocumentList&gt; Returns a DocumentList used to iterate over documents in the collection.  "},{"title":"Delete​","type":1,"pageTitle":"CollectionReference","url":"api/CollectionReference#Delete","content":"&lt;/&gt; CollectionReference:Delete() → Promise&lt;void&gt; Returns a document reference. "},{"title":"DocumentReference","type":0,"sectionRef":"#","url":"api/DocumentReference","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"DocumentReference","url":"api/DocumentReference#properties","content":" "},{"title":"App​","type":1,"pageTitle":"DocumentReference","url":"api/DocumentReference#App","content":"&lt;/&gt; DocumentReference.App: FirebaseApp The FirebaseApp object tied to this document.  "},{"title":"Cache​","type":1,"pageTitle":"DocumentReference","url":"api/DocumentReference#Cache","content":"&lt;/&gt; DocumentReference.Cache: { CreateTime: DateTime, UpdateTime: DateTime, Data: {[string]: any} } Data from the previous read operation.  "},{"title":"LastWrite​","type":1,"pageTitle":"DocumentReference","url":"api/DocumentReference#LastWrite","content":"&lt;/&gt; DocumentReference.LastWrite: DateTime The last time the document was written to using this reference.  "},{"title":"LastRead​","type":1,"pageTitle":"DocumentReference","url":"api/DocumentReference#LastRead","content":"&lt;/&gt; DocumentReference.LastRead: DateTime The last time the document was read from using this reference.  "},{"title":"Path​","type":1,"pageTitle":"DocumentReference","url":"api/DocumentReference#Path","content":"&lt;/&gt; DocumentReference.Path: string The path of this document.  "},{"title":"DocumentId​","type":1,"pageTitle":"DocumentReference","url":"api/DocumentReference#DocumentId","content":"&lt;/&gt; DocumentReference.DocumentId: string The ID of this document. "},{"title":"Functions​","type":1,"pageTitle":"DocumentReference","url":"api/DocumentReference#functions","content":" "},{"title":"Read​","type":1,"pageTitle":"DocumentReference","url":"api/DocumentReference#Read","content":"&lt;/&gt; DocumentReference:Read() → Promise&lt;{[fieldName: string]: any}&gt; Reads the document.  "},{"title":"Write​","type":1,"pageTitle":"DocumentReference","url":"api/DocumentReference#Write","content":"&lt;/&gt; DocumentReference:Write(data: {[fieldName: string]: any}) → Promise&lt;{[fieldName: string]: any}&gt; Writes to the document. Returns full document currently on the Firestore server. The return is not very useful in this case as this method overwrites the data on the server.  "},{"title":"Update​","type":1,"pageTitle":"DocumentReference","url":"api/DocumentReference#Update","content":"&lt;/&gt; DocumentReference:Update(data: {[fieldName: string]: any}) → Promise&lt;{[fieldName: string]: any}&gt; Writes certain fields of data to the document. Returns the full document currently on the Firestore server.  "},{"title":"Delete​","type":1,"pageTitle":"DocumentReference","url":"api/DocumentReference#Delete","content":"&lt;/&gt; DocumentReference:Delete() → Promise&lt;void&gt; Deletes the document. "}]