"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[331],{3905:function(e,r,t){t.d(r,{Zo:function(){return s},kt:function(){return d}});var n=t(67294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function u(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=n.createContext({}),l=function(e){var r=n.useContext(c),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},s=function(e){var r=l(e.components);return n.createElement(c.Provider,{value:r},e.children)},p={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},f=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,s=u(e,["components","mdxType","originalType","parentName"]),f=l(t),d=o,m=f["".concat(c,".").concat(d)]||f[d]||p[d]||a;return t?n.createElement(m,i(i({ref:r},s),{},{components:t})):n.createElement(m,i({ref:r},s))}));function d(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=f;var u={};for(var c in r)hasOwnProperty.call(r,c)&&(u[c]=r[c]);u.originalType=e,u.mdxType="string"==typeof e?e:o,i[1]=u;for(var l=2;l<a;l++)i[l]=t[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}f.displayName="MDXCreateElement"},76647:function(e,r,t){t.r(r),t.d(r,{frontMatter:function(){return u},contentTitle:function(){return c},metadata:function(){return l},toc:function(){return s},default:function(){return f}});var n=t(87462),o=t(63366),a=(t(67294),t(3905)),i=["components"],u={},c="FirebaseLuau",l={type:"mdx",permalink:"/FirebaseLuau/",source:"@site/pages/index.md"},s=[{value:"Setup",id:"setup",children:[],level:2},{value:"Example",id:"example",children:[],level:2}],p={toc:s};function f(e){var r=e.components,t=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,n.Z)({},p,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"firebaseluau"},"FirebaseLuau"),(0,a.kt)("p",null,"Promise based library for accessing Firebase services from within Roblox. Currently this project only has support for\nFirestore."),(0,a.kt)("h2",{id:"setup"},"Setup"),(0,a.kt)("p",null,"Authentication is done through Firebase's Authentication service using a normal email/password provider. This\n",(0,a.kt)("strong",{parentName:"p"},"is not")," your actual email or password. Once an account is created update your rules to allow this account read/write\npermissions on any services you need."),(0,a.kt)("p",null,"A simple example of a rule is allowing only the UID of the account to read and write."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cel"},"rules_version = '2';\nservice cloud.firestore {\n  match /databases/{database}/documents {\n    match /{document=**} {\n      allow read, write: if request.auth != null && request.auth.uid == \"kaTY7zQKbkZsjvlkv2Hu6KQhRf02\";\n    }\n  }\n}\n")),(0,a.kt)("h2",{id:"example"},"Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'local Firebase = require("FirebaseLuau")\nlocal firebase = Firebase.init({\n    ProjectId = "PROJECT_ID",\n    APIKey = "WEB_API_KEY",\n    Email = "EMAIL",\n    Password = "PASSWORD"\n})\n\nlocal usersCollection = firebase.Firestore:GetCollection("users")\nlocal userDoc = usersCollection:GetDoc("72938051") -- OR firebase.Firestore:GetDoc("users/72938051")\n\nuserDoc:Write({\n    gold = 100,\n}):await()\n\nprint(userDoc:Read():expect())\n')))}f.isMDXComponent=!0}}]);